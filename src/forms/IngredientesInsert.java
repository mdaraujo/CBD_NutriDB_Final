/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import databases.GraphDB;
import databases.RelationalDB;
import entities.Prato;
import java.awt.Font;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel
 */
public class IngredientesInsert extends javax.swing.JFrame {

    private int idPrato;
    private int idSelectedInSearch;
    private int idSelectedInReceita;
    private String nomeSelectedAlimetoSearch;

    public IngredientesInsert(int id) {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setTitle("Ingredientes");
        this.setLocationRelativeTo(null);
        receitaList.setFont(new Font("monospaced", Font.PLAIN, 12));

        idPrato = id;
        idSelectedInSearch = -1;
        idSelectedInReceita = -1;

        fillReceitaList();
        
        //JUST TO DEBUG
        try {
            System.out.println(RelationalDB.getPratoNutriInfo(GraphDB.getListIngContidosEmPrato(idPrato)));
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    public IngredientesInsert() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        receitaList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomeAlimentoInput = new javax.swing.JTextField();
        searchAlimentoBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        alimentosList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        qtdInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        unidadeInput = new javax.swing.JComboBox<>();
        addIIngredienteBtn = new javax.swing.JButton();
        removeIngBtn = new javax.swing.JButton();
        criarAlimentoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        receitaList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receitaListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(receitaList);

        jLabel1.setText("Ingredientes na Receita");

        jLabel2.setText("Nome do Alimento");

        searchAlimentoBtn.setText("Pesquisar Alimento");
        searchAlimentoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAlimentoBtnActionPerformed(evt);
            }
        });

        alimentosList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alimentosListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(alimentosList);

        jLabel3.setText("Quantidade");

        jLabel4.setText("Unidade");

        unidadeInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "g", "kg", "q.b", "ml", "colheres de sopa", "colheres de chá", "colheres de sobremesa", "colheres de café", "unidades", "chávenas", "copos", "pitadas", "cubos", "dentes", "fios", "pacotes", "postas", "folhas" }));
        unidadeInput.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                unidadeInputItemStateChanged(evt);
            }
        });

        addIIngredienteBtn.setText("Adicionar Ingrediente");
        addIIngredienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addIIngredienteBtnActionPerformed(evt);
            }
        });

        removeIngBtn.setText("Remover Ingrediente");
        removeIngBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeIngBtnActionPerformed(evt);
            }
        });

        criarAlimentoBtn.setText("Criar Alimento");
        criarAlimentoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarAlimentoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(16, 16, 16)
                                .addComponent(nomeAlimentoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchAlimentoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeIngBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(unidadeInput, 0, 148, Short.MAX_VALUE)
                                    .addComponent(qtdInput)))
                            .addComponent(addIIngredienteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(criarAlimentoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomeAlimentoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchAlimentoBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(criarAlimentoBtn)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(qtdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(unidadeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addIIngredienteBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(removeIngBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void criarAlimentoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarAlimentoBtnActionPerformed
        AlimentoCreate createForm = new AlimentoCreate();
        createForm.setVisible(true);
    }//GEN-LAST:event_criarAlimentoBtnActionPerformed

    private void searchAlimentoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAlimentoBtnActionPerformed
        try {
            DefaultListModel listModel = RelationalDB.getAlimentosByName(nomeAlimentoInput.getText());
            alimentosList.setModel(listModel);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_searchAlimentoBtnActionPerformed

    private void alimentosListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alimentosListMouseClicked

        nomeSelectedAlimetoSearch = alimentosList.getSelectedValue();

        if (nomeSelectedAlimetoSearch == null) {
            return;
        }

        try {
            idSelectedInSearch = RelationalDB.getAlimentoID(nomeSelectedAlimetoSearch);
            //System.out.println(idSelectedInSearch + " " + nomeSelectedAlimetoSearch);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        if (evt.getClickCount() == 2) {
            AlimentoEdit editForm = new AlimentoEdit(idSelectedInSearch);
            editForm.setVisible(true);
        }
    }//GEN-LAST:event_alimentosListMouseClicked

    private void addIIngredienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIIngredienteBtnActionPerformed

        if (idSelectedInSearch == -1) {
            JOptionPane.showMessageDialog(this,
                    "É necessario selecionar um alimento para o poder adicionar há lista de ingredientes!",
                    "Informação",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        double qtd;
        if (unidadeInput.getSelectedItem().toString().equals("q.b")) {
            qtd = 0;
        } else {
            try {
                qtd = Double.valueOf(qtdInput.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this,
                        "É necessario inserir um valor numérico válido para a quantidade!",
                        "Informação",
                        JOptionPane.WARNING_MESSAGE);
                System.out.println(ex.getMessage());
                return;
            }
        }

        try {
            if (!GraphDB.pratoExists(idPrato)) {
                Prato prato = RelationalDB.getPrato(idPrato);
                GraphDB.createPrato(idPrato, prato.getNome());
            }

            if (!GraphDB.alimentoExists(idSelectedInSearch)) {
                GraphDB.createAlimento(idSelectedInSearch, nomeSelectedAlimetoSearch);
            }

            GraphDB.addAlimentoToPrato(idPrato, idSelectedInSearch, qtd, unidadeInput.getSelectedItem().toString());
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        fillReceitaList();

    }//GEN-LAST:event_addIIngredienteBtnActionPerformed

    private void removeIngBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeIngBtnActionPerformed
        if (idSelectedInReceita == -1) {
            JOptionPane.showMessageDialog(this,
                    "É necessario selecionar um ingrediente para o poder remover da receita!",
                    "Informação",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            GraphDB.deleteCONTEMRelation(idPrato, idSelectedInReceita);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        fillReceitaList();
    }//GEN-LAST:event_removeIngBtnActionPerformed

    private void receitaListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receitaListMouseClicked

        String receitaLinha = receitaList.getSelectedValue();

        if (receitaLinha == null) {
            return;
        }

        String[] parts = receitaLinha.split("\\d");
        String nome = parts[0].replace("q.b", "").trim();
        try {
            idSelectedInReceita = RelationalDB.getAlimentoID(nome);
            //System.out.println(idSelectedInReceita + " " + nome);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        if (evt.getClickCount() == 2) {
            AlimentoEdit editForm = new AlimentoEdit(idSelectedInReceita);
            editForm.setVisible(true);
        }
    }//GEN-LAST:event_receitaListMouseClicked

    private void unidadeInputItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_unidadeInputItemStateChanged
        if (unidadeInput.getSelectedItem().toString().equals("q.b")) {
            qtdInput.setText("");
            qtdInput.setEnabled(false);
        } else if (!qtdInput.isEnabled()) {
            qtdInput.setEnabled(true);
        }
    }//GEN-LAST:event_unidadeInputItemStateChanged

    private void fillReceitaList() {
        try {
            DefaultListModel listModel = GraphDB.getIngredientesContidosEmPrato(idPrato);
            receitaList.setModel(listModel);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngredientesInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngredientesInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngredientesInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngredientesInsert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new IngredientesInsert().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addIIngredienteBtn;
    private javax.swing.JList<String> alimentosList;
    private javax.swing.JButton criarAlimentoBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nomeAlimentoInput;
    private javax.swing.JTextField qtdInput;
    private javax.swing.JList<String> receitaList;
    private javax.swing.JButton removeIngBtn;
    private javax.swing.JButton searchAlimentoBtn;
    private javax.swing.JComboBox<String> unidadeInput;
    // End of variables declaration//GEN-END:variables
}
